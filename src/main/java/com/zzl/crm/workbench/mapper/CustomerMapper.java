package com.zzl.crm.workbench.mapper;

import com.zzl.crm.workbench.pojo.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon May 09 19:59:20 CST 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 添加客户
     * @param customer
     * @return
     */
    int insertCustomer(Customer customer);

    /**
     * 分页条件查询
     * @param map
     * @return
     */
    List<Customer> selectCustomerByPageAndCondition(Map<String,Object> map);

    /**
     * 根据条件查询总记录数
     * @param map
     * @return
     */
    int selectCustomerTotalAndCondition(Map<String,Object>map);

    /**
     * 根据id查询
     * @param id
     * @return
     */
    Customer selectCustomerById(String id);

    /**
     * 根据id修改
     * @param customer
     * @return
     */
    int updateCustomerById(Customer customer);

    /**
     * 根据id批量删除
     * @param id
     * @return
     */
    int deleteCustomerById(String[] id);

    /**
     * 根据名称查询客户名称
     * @return
     */
    List<String>selectAllCustomerName(String name);

    /**
     * 根据名称精确查询
     * @param customerName
     * @return
     */
    Customer selectCustomerByName(String customerName);
}
