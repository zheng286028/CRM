package com.zzl.crm.workbench.mapper;

import com.zzl.crm.workbench.pojo.ClueActivityRelation;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Sun May 08 17:14:58 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 添加线索市场活动联系
     * @param ClueActivityRelation
     * @return
     */
    int insertClueActivityRelationList(@Param("ClueActivityRelation") List<ClueActivityRelation> ClueActivityRelation);

    /**
     * 根据ClueIdAndActivityId删除删除活动
     * @param relation
     * @return
     */
    int deleteClueActivityByClueAndActivityId(ClueActivityRelation relation);

    /**
     * 根据ClueID查询当前线索的市场活动
     * @param ClueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String ClueId);

    /**
     *
     * 根据ClueId删除当前线索和市场活动的关联关系
     * @param ClueId
     * @return
     */
    int deleteClueActivityRelationByClueId(String ClueId);
}
